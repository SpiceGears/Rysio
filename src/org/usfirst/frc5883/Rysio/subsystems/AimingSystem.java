// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5883.Rysio.subsystems;

import org.usfirst.frc5883.Rysio.RobotMap;
import org.usfirst.frc5883.Rysio.commands.*;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Victor;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class AimingSystem extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController speedController1 = RobotMap.aimingSystemSpeedController1;
    private final DigitalInput limitSwitch1 = RobotMap.aimingSystemLimitSwitch1;
    private final DigitalInput limitSwitch2 = RobotMap.aimingSystemLimitSwitch2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        
        SmartDashboard.putBoolean("LimitSwitch1", limitSwitch1.get());
        SmartDashboard.putBoolean("LimitSwitch2", limitSwitch2.get());


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    
    }
    
    public void aimUp() {
    	speedController1.set(0.6);
    	if(!limitSwitch1.get())
    	{
    		aimStop();
    	}else {
    		speedController1.set(0.6);
    	}
    }
    
    public void aimDown() {
    	speedController1.set(-0.3);
    	if(!limitSwitch2.get())
    	{
    		aimStop();
    	}else {
    		speedController1.set(-0.3);
    		
    	
    	}
    }
    
    public void aimStop() {
    	speedController1.set(0);
    }
    
    
    
    
    
    

}