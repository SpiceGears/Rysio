// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5883.Rysio.subsystems;

import org.usfirst.frc5883.Rysio.Robot;
import org.usfirst.frc5883.Rysio.RobotMap;
import org.usfirst.frc5883.Rysio.commands.*;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.Victor;
import edu.wpi.first.wpilibj.DoubleSolenoid.Value;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class ShootingSystem extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController speedController1 = RobotMap.shootingSystemSpeedController1;
    private final Compressor compressor1 = RobotMap.shootingSystemCompressor1;
    private final DoubleSolenoid doubleSolenoid1 = RobotMap.shootingSystemDoubleSolenoid1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        compressor1.stop();

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void compressorOn() {
    	compressor1.start();
    }
    
    public void compressorOff() {
    	compressor1.stop();
    }
    
    public void intake() {
    	speedController1.set(-0.4);
    }
    
    public void shoot() {
    	if(Robot.oi.getJoystick1().getRawButton(16)) {
    	speedController1.set(0.8);
    	Timer.delay(2);
    	doubleSolenoid1.set(Value.kReverse );
    	Timer.delay(0.5);
    	doubleSolenoid1.set(Value.kForward);
    	speedController1.set(0);
    	Timer.delay(0.5);
    	doubleSolenoid1.set(Value.kOff);
    	}else if(Robot.oi.getJoystick1().getRawButton(14)) {
    		speedController1.set(0.4);
        	Timer.delay(2);
        	doubleSolenoid1.set(Value.kReverse );
        	Timer.delay(0.5);
        	doubleSolenoid1.set(Value.kForward);
        	speedController1.set(0);
        	Timer.delay(0.5);
        	doubleSolenoid1.set(Value.kOff);
    	}else {
    		speedController1.set(0.9);
        	Timer.delay(2);
        	doubleSolenoid1.set(Value.kReverse );
        	Timer.delay(0.5);
        	doubleSolenoid1.set(Value.kForward);
        	speedController1.set(0);
        	Timer.delay(0.5);
        	doubleSolenoid1.set(Value.kOff);
    	}
    }
    
    public void stopMotor() {
    	speedController1.set(0);
    }
    
    
    
    
}

